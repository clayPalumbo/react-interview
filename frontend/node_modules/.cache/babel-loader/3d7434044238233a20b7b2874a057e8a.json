{"ast":null,"code":"var _jsxFileName = \"/Users/claypalumbo/Desktop/code/react-interview/frontend/src/routes/GoogleMapComponent.jsx\";\nimport React, { Component } from \"react\";\nimport { compose, withProps, withHandlers } from \"recompose\";\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\nimport { MarkerClusterer } from 'react-google-maps/lib/components/addons/MarkerClusterer';\nconst apiKey = 'AIzaSyBdncZvkNUpZiLS-07md2po65CCB9SzrH4';\nconst MyMapComponent = compose(withProps({\n  googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=\".concat(apiKey, \"&v=3.exp&libraries=geometry,drawing,places\"),\n  loadingElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }),\n  containerElement: React.createElement(\"div\", {\n    style: {\n      height: \"400px\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }),\n  mapElement: React.createElement(\"div\", {\n    style: {\n      height: \"100%\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })\n}), withHandlers({\n  onMarkerClustererClick: () => markerClusterer => {\n    const clickedMarkers = markerClusterer.getMarkers();\n  }\n}), withScriptjs, withGoogleMap)(props => React.createElement(GoogleMap, {\n  defaultZoom: 4,\n  defaultCenter: {\n    lat: 39.5,\n    lng: -98.5\n  },\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(MarkerClusterer, {\n  onClick: props.onMarkerClustererClick,\n  averageCenter: true,\n  enableRetinaIcons: true,\n  gridSize: 60,\n  maxZoom: 14,\n  styles: [{\n    height: 53,\n    url: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m',\n    width: 53\n  }],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, props.isMarkerShown && props.markers)));\nexport default class GoogleMapComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    fetch('/react-interview/getLowesStores').then(res => {\n      return res.json();\n    }).then(locations => {\n      console.log(locations);\n      const markers = locations.map((site, i) => {\n        const markerLatLng = {\n          position: {\n            lat: site.geometry.location.lat,\n            lng: site.geometry.location.lng\n          }\n        };\n        return React.createElement(Marker, Object.assign({\n          key: i\n        }, markerLatLng, {\n          site: site,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      });\n      this.setState({\n        markers: markers\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(MyMapComponent, {\n      isMarkerShown: true,\n      markers: this.state.markers,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/claypalumbo/Desktop/code/react-interview/frontend/src/routes/GoogleMapComponent.jsx"],"names":["React","Component","compose","withProps","withHandlers","withScriptjs","withGoogleMap","GoogleMap","Marker","MarkerClusterer","apiKey","MyMapComponent","googleMapURL","loadingElement","height","containerElement","mapElement","onMarkerClustererClick","markerClusterer","clickedMarkers","getMarkers","props","lat","lng","url","width","isMarkerShown","markers","GoogleMapComponent","constructor","state","componentDidMount","fetch","then","res","json","locations","console","log","map","site","i","markerLatLng","position","geometry","location","setState","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { compose, withProps, withHandlers } from \"recompose\";\nimport {\n  withScriptjs,\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\nimport { MarkerClusterer } from 'react-google-maps/lib/components/addons/MarkerClusterer'\n\nconst apiKey = 'AIzaSyBdncZvkNUpZiLS-07md2po65CCB9SzrH4'\n\nconst MyMapComponent = compose(\n  withProps({\n    googleMapURL:\n      `https://maps.googleapis.com/maps/api/js?key=${apiKey}&v=3.exp&libraries=geometry,drawing,places`,\n    loadingElement: <div style={{ height: `100%` }} />,\n    containerElement: <div style={{ height: `400px` }} />,\n    mapElement: <div style={{ height: `100%` }} />\n  }),\n  withHandlers({\n      onMarkerClustererClick: () => (markerClusterer) => {\n          const clickedMarkers = markerClusterer.getMarkers()\n      },\n  }),\n  withScriptjs,\n  withGoogleMap\n)(props => (\n  <GoogleMap \n  defaultZoom={4} \n  defaultCenter={{ lat: 39.5, lng: -98.5}}>\n  <MarkerClusterer\n    onClick={props.onMarkerClustererClick}\n    averageCenter\n    enableRetinaIcons\n    gridSize={60}\n    maxZoom={14}\n    styles={[{ height: 53, url: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m', width: 53}]}\n    >\n    {props.isMarkerShown && (\n      props.markers\n    )} \n    </MarkerClusterer>\n  </GoogleMap>\n));\n\nexport default class GoogleMapComponent extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n\n        }\n    }\n\n    componentDidMount() {\n        fetch('/react-interview/getLowesStores')\n          .then(res => {\n              return res.json()\n           })\n          .then(locations => { \n              console.log(locations); \n              const markers = locations.map((site, i) => {\n                const markerLatLng = {\n                    position: {\n                        lat: site.geometry.location.lat,\n                        lng: site.geometry.location.lng\n                    }\n                }\n                return (\n                    <Marker\n                    key={i}\n                    {...markerLatLng}\n                    site={site}>\n                    </Marker>\n                )\n              })\n              this.setState({ markers: markers })\n           });\n       }\n\n    render() {\n        return (\n            <div>\n                <MyMapComponent\n                isMarkerShown\n                markers={this.state.markers}\n                />\n                </div>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/claypalumbo/Desktop/code/react-interview/frontend/src/routes/Earthquakes.jsx\";\nimport React from 'react';\nimport ReactTable from 'react-table';\nimport Papa from 'papaparse';\nimport 'react-table/react-table.css';\n\nclass Earthquakes extends React.Component {\n  componentDidMount() {\n    fetch('/react-interview/getEarthQuakes', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => {\n      console.log(res);\n      return res.json();\n    }).then(locations => {\n      const csvstream = locations;\n      console.log(csvstream);\n      const test = Papa.parse(csvstream);\n      console.log(test);\n      this.setState({\n        markers: locations\n      });\n    });\n  }\n\n  render() {\n    const data = [{\n      name: 'Tanner Linsley',\n      age: 26,\n      friend: {\n        name: 'Jason Maurer',\n        age: 23\n      }\n    }];\n    const columns = [{\n      Header: 'Name',\n      accessor: 'name' // String-based value accessors!\n\n    }, {\n      Header: 'Age',\n      accessor: 'age',\n      Cell: props => React.createElement(\"span\", {\n        className: \"number\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, props.value) // Custom cell components!\n\n    }, {\n      id: 'friendName',\n      // Required because our accessor is not a string\n      Header: 'Friend Name',\n      accessor: d => d.friend.name // Custom value accessors!\n\n    }, {\n      Header: props => React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Friend Age\"),\n      // Custom header components!\n      accessor: 'friend.age'\n    }];\n    return React.createElement(ReactTable, {\n      data: data,\n      columns: columns,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Earthquakes;","map":{"version":3,"sources":["/Users/claypalumbo/Desktop/code/react-interview/frontend/src/routes/Earthquakes.jsx"],"names":["React","ReactTable","Papa","Earthquakes","Component","componentDidMount","fetch","headers","then","res","console","log","json","locations","csvstream","test","parse","setState","markers","render","data","name","age","friend","columns","Header","accessor","Cell","props","value","id","d"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAO,6BAAP;;AAEA,MAAMC,WAAN,SAA0BH,KAAK,CAACI,SAAhC,CAA0C;AAEtCC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCC,MAAAA,OAAO,EAAG;AACR,wBAAgB,kBADR;AAER,kBAAU;AAFF;AAD2B,KAApC,CAAL,CAMKC,IANL,CAMUC,GAAG,IAAI;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOA,GAAG,CAACG,IAAJ,EAAP;AACH,KATL,EAUKJ,IAVL,CAUUK,SAAS,IAAI;AACf,YAAMC,SAAS,GAAGD,SAAlB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYG,SAAZ;AACA,YAAMC,IAAI,GAAGb,IAAI,CAACc,KAAL,CAAWF,SAAX,CAAb;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAZ;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAEL;AAAX,OAAd;AACH,KAhBL;AAiBH;;AAEDM,EAAAA,MAAM,GAAG;AACL,UAAMC,IAAI,GAAG,CAAC;AACZC,MAAAA,IAAI,EAAE,gBADM;AAEZC,MAAAA,GAAG,EAAE,EAFO;AAGZC,MAAAA,MAAM,EAAE;AACNF,QAAAA,IAAI,EAAE,cADA;AAENC,QAAAA,GAAG,EAAE;AAFC;AAHI,KAAD,CAAb;AASA,UAAME,OAAO,GAAG,CAAC;AACfC,MAAAA,MAAM,EAAE,MADO;AAEfC,MAAAA,QAAQ,EAAE,MAFK,CAEE;;AAFF,KAAD,EAGb;AACDD,MAAAA,MAAM,EAAE,KADP;AAEDC,MAAAA,QAAQ,EAAE,KAFT;AAGDC,MAAAA,IAAI,EAAEC,KAAK,IAAI;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BA,KAAK,CAACC,KAAhC,CAHd,CAG4D;;AAH5D,KAHa,EAOb;AACDC,MAAAA,EAAE,EAAE,YADH;AACiB;AAClBL,MAAAA,MAAM,EAAE,aAFP;AAGDC,MAAAA,QAAQ,EAAEK,CAAC,IAAIA,CAAC,CAACR,MAAF,CAASF,IAHvB,CAG4B;;AAH5B,KAPa,EAWb;AACDI,MAAAA,MAAM,EAAEG,KAAK,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADhB;AACyC;AAC1CF,MAAAA,QAAQ,EAAE;AAFT,KAXa,CAAhB;AAgBA,WAAO,oBAAC,UAAD;AACL,MAAA,IAAI,EAAEN,IADD;AAEL,MAAA,OAAO,EAAEI,OAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAID;;AApDmC;;AAwD1C,eAAerB,WAAf","sourcesContent":["import React from 'react';\nimport ReactTable from 'react-table';\nimport Papa from 'papaparse'\nimport 'react-table/react-table.css';\n\nclass Earthquakes extends React.Component {\n\n    componentDidMount() {\n        fetch('/react-interview/getEarthQuakes', {\n            headers : { \n              'Content-Type': 'application/json',\n              'Accept': 'application/json'\n             }\n            })\n            .then(res => {\n                console.log(res)\n                return res.json()\n            })\n            .then(locations => {\n                const csvstream = locations;\n                console.log(csvstream)\n                const test = Papa.parse(csvstream)\n                console.log(test)\n                this.setState({ markers: locations })\n            });\n    }\n\n    render() {\n        const data = [{\n          name: 'Tanner Linsley',\n          age: 26,\n          friend: {\n            name: 'Jason Maurer',\n            age: 23,\n          }\n        },]\n       \n        const columns = [{\n          Header: 'Name',\n          accessor: 'name' // String-based value accessors!\n        }, {\n          Header: 'Age',\n          accessor: 'age',\n          Cell: props => <span className='number'>{props.value}</span> // Custom cell components!\n        }, {\n          id: 'friendName', // Required because our accessor is not a string\n          Header: 'Friend Name',\n          accessor: d => d.friend.name // Custom value accessors!\n        }, {\n          Header: props => <span>Friend Age</span>, // Custom header components!\n          accessor: 'friend.age'\n        }]\n       \n        return <ReactTable\n          data={data}\n          columns={columns}\n        />\n      }\n\n}\n\nexport default Earthquakes;"]},"metadata":{},"sourceType":"module"}
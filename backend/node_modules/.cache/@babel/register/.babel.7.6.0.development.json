{
  "{\"sourceRoot\":\"/Users/claypalumbo/Desktop/code/react-interview/backend\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/claypalumbo/Desktop/code/react-interview/backend\",\"filename\":\"/Users/claypalumbo/Desktop/code/react-interview/backend/server.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/claypalumbo/Desktop/code/react-interview/backend\",\"plugins\":[{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.6.0": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/claypalumbo/Desktop/code/react-interview/backend",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/claypalumbo/Desktop/code/react-interview/backend",
      "filename": "/Users/claypalumbo/Desktop/code/react-interview/backend/server.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/claypalumbo/Desktop/code/react-interview/backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/claypalumbo/Desktop/code/react-interview/backend/server.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/claypalumbo/Desktop/code/react-interview/backend/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/claypalumbo/Desktop/code/react-interview/backend",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar locations = _interopRequireWildcard(require(\"../data/stores.json\"));\n\nvar earthquakes = _interopRequireWildcard(require(\"../data/earthquake.json\"));\n\nvar loans = _interopRequireWildcard(require(\"../data/loans.json\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nrequire('dotenv').config({\n  path: '.env'\n});\n\nvar app = (0, _express[\"default\"])();\n\nvar fs = require('fs');\n\nvar csv = require('csvtojson');\n\nvar request = require('request');\n\nfunction getLocations(req) {\n  var stores = [];\n  locations.Stores.map(function (x) {\n    stores.push({\n      name: x.lct_name,\n      number: x.lct_nbr,\n      geometry: {\n        location: {\n          lat: x.ltd_msr,\n          lng: x.lng_msr\n        }\n      }\n    });\n  });\n  return stores;\n}\n\nfunction getEarth(req) {\n  var quake = [];\n  earthquakes.Earthquakes.map(function (x) {\n    quake.push(x);\n  });\n  return quake;\n}\n\nfunction getLoans(req) {\n  var allLoans = [];\n  loans.Loans.map(function (x) {\n    allLoans.push(x);\n  });\n  console.log(allLoans);\n  return allLoans;\n}\n\napp.get('/react-interview/getLowesStores', function (req, res) {\n  return res.send(getLocations(req));\n});\napp.get('/react-interview/getEarthQuakes', function (req, res) {\n  return res.send(getEarth(req));\n});\napp.get('/react-interview/getLoanData', function (req, res) {\n  return res.send(getLoans(req));\n});\napp.listen(process.env.PORT);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwicGF0aCIsImFwcCIsImZzIiwiY3N2IiwicmVxdWVzdCIsImdldExvY2F0aW9ucyIsInJlcSIsInN0b3JlcyIsImxvY2F0aW9ucyIsIlN0b3JlcyIsIm1hcCIsIngiLCJwdXNoIiwibmFtZSIsImxjdF9uYW1lIiwibnVtYmVyIiwibGN0X25iciIsImdlb21ldHJ5IiwibG9jYXRpb24iLCJsYXQiLCJsdGRfbXNyIiwibG5nIiwibG5nX21zciIsImdldEVhcnRoIiwicXVha2UiLCJlYXJ0aHF1YWtlcyIsIkVhcnRocXVha2VzIiwiZ2V0TG9hbnMiLCJhbGxMb2FucyIsImxvYW5zIiwiTG9hbnMiLCJjb25zb2xlIiwibG9nIiwiZ2V0IiwicmVzIiwic2VuZCIsImxpc3RlbiIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIl0sIm1hcHBpbmdzIjoiOztBQUFBOztBQVFBOztBQUNBOztBQUNBOzs7Ozs7OztBQVRBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQixDQUF5QjtBQUFFQyxFQUFBQSxJQUFJLEVBQUU7QUFBUixDQUF6Qjs7QUFDQSxJQUFNQyxHQUFHLEdBQUcsMEJBQVo7O0FBRUEsSUFBTUMsRUFBRSxHQUFHSixPQUFPLENBQUMsSUFBRCxDQUFsQjs7QUFDQSxJQUFNSyxHQUFHLEdBQUdMLE9BQU8sQ0FBQyxXQUFELENBQW5COztBQUNBLElBQU1NLE9BQU8sR0FBR04sT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBTUEsU0FBU08sWUFBVCxDQUFzQkMsR0FBdEIsRUFBMkI7QUFDekIsTUFBSUMsTUFBTSxHQUFHLEVBQWI7QUFFQUMsRUFBQUEsU0FBUyxDQUFDQyxNQUFWLENBQWlCQyxHQUFqQixDQUFxQixVQUFBQyxDQUFDLEVBQUk7QUFDeEJKLElBQUFBLE1BQU0sQ0FBQ0ssSUFBUCxDQUNFO0FBQ0VDLE1BQUFBLElBQUksRUFBRUYsQ0FBQyxDQUFDRyxRQURWO0FBRUVDLE1BQUFBLE1BQU0sRUFBRUosQ0FBQyxDQUFDSyxPQUZaO0FBR0VDLE1BQUFBLFFBQVEsRUFBRTtBQUNSQyxRQUFBQSxRQUFRLEVBQUU7QUFDUkMsVUFBQUEsR0FBRyxFQUFFUixDQUFDLENBQUNTLE9BREM7QUFFUkMsVUFBQUEsR0FBRyxFQUFFVixDQUFDLENBQUNXO0FBRkM7QUFERjtBQUhaLEtBREY7QUFZRCxHQWJEO0FBY0EsU0FBT2YsTUFBUDtBQUNEOztBQUdELFNBQVNnQixRQUFULENBQWtCakIsR0FBbEIsRUFBdUI7QUFDckIsTUFBSWtCLEtBQUssR0FBRyxFQUFaO0FBQ0FDLEVBQUFBLFdBQVcsQ0FBQ0MsV0FBWixDQUF3QmhCLEdBQXhCLENBQTRCLFVBQUFDLENBQUMsRUFBSTtBQUMvQmEsSUFBQUEsS0FBSyxDQUFDWixJQUFOLENBQVdELENBQVg7QUFDRCxHQUZEO0FBR0EsU0FBT2EsS0FBUDtBQUNEOztBQUVELFNBQVNHLFFBQVQsQ0FBa0JyQixHQUFsQixFQUF1QjtBQUNyQixNQUFJc0IsUUFBUSxHQUFHLEVBQWY7QUFDQUMsRUFBQUEsS0FBSyxDQUFDQyxLQUFOLENBQVlwQixHQUFaLENBQWdCLFVBQUFDLENBQUMsRUFBSTtBQUNuQmlCLElBQUFBLFFBQVEsQ0FBQ2hCLElBQVQsQ0FBY0QsQ0FBZDtBQUNELEdBRkQ7QUFHQW9CLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSixRQUFaO0FBQ0EsU0FBT0EsUUFBUDtBQUNEOztBQUVEM0IsR0FBRyxDQUFDZ0MsR0FBSixDQUFRLGlDQUFSLEVBQTJDLFVBQUMzQixHQUFELEVBQU00QixHQUFOO0FBQUEsU0FBY0EsR0FBRyxDQUFDQyxJQUFKLENBQVM5QixZQUFZLENBQUNDLEdBQUQsQ0FBckIsQ0FBZDtBQUFBLENBQTNDO0FBQ0FMLEdBQUcsQ0FBQ2dDLEdBQUosQ0FBUSxpQ0FBUixFQUEyQyxVQUFDM0IsR0FBRCxFQUFNNEIsR0FBTjtBQUFBLFNBQWNBLEdBQUcsQ0FBQ0MsSUFBSixDQUFTWixRQUFRLENBQUNqQixHQUFELENBQWpCLENBQWQ7QUFBQSxDQUEzQztBQUNBTCxHQUFHLENBQUNnQyxHQUFKLENBQVEsOEJBQVIsRUFBd0MsVUFBQzNCLEdBQUQsRUFBTTRCLEdBQU47QUFBQSxTQUFjQSxHQUFHLENBQUNDLElBQUosQ0FBU1IsUUFBUSxDQUFDckIsR0FBRCxDQUFqQixDQUFkO0FBQUEsQ0FBeEM7QUFFQUwsR0FBRyxDQUFDbUMsTUFBSixDQUFXQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBdkIiLCJzb3VyY2VSb290IjoiL1VzZXJzL2NsYXlwYWx1bWJvL0Rlc2t0b3AvY29kZS9yZWFjdC1pbnRlcnZpZXcvYmFja2VuZCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xucmVxdWlyZSgnZG90ZW52JykuY29uZmlnKHsgcGF0aDogJy5lbnYnIH0pO1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XG5jb25zdCBjc3YgPSByZXF1aXJlKCdjc3Z0b2pzb24nKTtcbmNvbnN0IHJlcXVlc3QgPSByZXF1aXJlKCdyZXF1ZXN0Jyk7XG5cbmltcG9ydCAqIGFzIGxvY2F0aW9ucyBmcm9tIFwiLi4vZGF0YS9zdG9yZXMuanNvblwiO1xuaW1wb3J0ICogYXMgZWFydGhxdWFrZXMgZnJvbSBcIi4uL2RhdGEvZWFydGhxdWFrZS5qc29uXCI7XG5pbXBvcnQgKiBhcyBsb2FucyBmcm9tIFwiLi4vZGF0YS9sb2Fucy5qc29uXCI7XG5cbmZ1bmN0aW9uIGdldExvY2F0aW9ucyhyZXEpIHtcbiAgdmFyIHN0b3JlcyA9IFtdXG5cbiAgbG9jYXRpb25zLlN0b3Jlcy5tYXAoeCA9PiB7XG4gICAgc3RvcmVzLnB1c2goXG4gICAgICB7XG4gICAgICAgIG5hbWU6IHgubGN0X25hbWUsXG4gICAgICAgIG51bWJlcjogeC5sY3RfbmJyLFxuICAgICAgICBnZW9tZXRyeToge1xuICAgICAgICAgIGxvY2F0aW9uOiB7XG4gICAgICAgICAgICBsYXQ6IHgubHRkX21zcixcbiAgICAgICAgICAgIGxuZzogeC5sbmdfbXNyXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9LFxuICAgIClcbiAgfSlcbiAgcmV0dXJuIHN0b3Jlc1xufVxuXG5cbmZ1bmN0aW9uIGdldEVhcnRoKHJlcSkge1xuICB2YXIgcXVha2UgPSBbXVxuICBlYXJ0aHF1YWtlcy5FYXJ0aHF1YWtlcy5tYXAoeCA9PiB7XG4gICAgcXVha2UucHVzaCh4KVxuICB9KVxuICByZXR1cm4gcXVha2Vcbn1cblxuZnVuY3Rpb24gZ2V0TG9hbnMocmVxKSB7IFxuICB2YXIgYWxsTG9hbnMgPSBbXVxuICBsb2Fucy5Mb2Fucy5tYXAoeCA9PiB7XG4gICAgYWxsTG9hbnMucHVzaCh4KSBcbiAgfSlcbiAgY29uc29sZS5sb2coYWxsTG9hbnMpXG4gIHJldHVybiBhbGxMb2Fuc1xufVxuXG5hcHAuZ2V0KCcvcmVhY3QtaW50ZXJ2aWV3L2dldExvd2VzU3RvcmVzJywgKHJlcSwgcmVzKSA9PiByZXMuc2VuZChnZXRMb2NhdGlvbnMocmVxKSkpO1xuYXBwLmdldCgnL3JlYWN0LWludGVydmlldy9nZXRFYXJ0aFF1YWtlcycsIChyZXEsIHJlcykgPT4gcmVzLnNlbmQoZ2V0RWFydGgocmVxKSkpO1xuYXBwLmdldCgnL3JlYWN0LWludGVydmlldy9nZXRMb2FuRGF0YScsIChyZXEsIHJlcykgPT4gcmVzLnNlbmQoZ2V0TG9hbnMocmVxKSkpO1xuXG5hcHAubGlzdGVuKHByb2Nlc3MuZW52LlBPUlQpO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "require",
        "config",
        "path",
        "app",
        "fs",
        "csv",
        "request",
        "getLocations",
        "req",
        "stores",
        "locations",
        "Stores",
        "map",
        "x",
        "push",
        "name",
        "lct_name",
        "number",
        "lct_nbr",
        "geometry",
        "location",
        "lat",
        "ltd_msr",
        "lng",
        "lng_msr",
        "getEarth",
        "quake",
        "earthquakes",
        "Earthquakes",
        "getLoans",
        "allLoans",
        "loans",
        "Loans",
        "console",
        "log",
        "get",
        "res",
        "send",
        "listen",
        "process",
        "env",
        "PORT"
      ],
      "mappings": ";;AAAA;;AAQA;;AACA;;AACA;;;;;;;;AATAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB,CAAyB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAAzB;;AACA,IAAMC,GAAG,GAAG,0BAAZ;;AAEA,IAAMC,EAAE,GAAGJ,OAAO,CAAC,IAAD,CAAlB;;AACA,IAAMK,GAAG,GAAGL,OAAO,CAAC,WAAD,CAAnB;;AACA,IAAMM,OAAO,GAAGN,OAAO,CAAC,SAAD,CAAvB;;AAMA,SAASO,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,MAAIC,MAAM,GAAG,EAAb;AAEAC,EAAAA,SAAS,CAACC,MAAV,CAAiBC,GAAjB,CAAqB,UAAAC,CAAC,EAAI;AACxBJ,IAAAA,MAAM,CAACK,IAAP,CACE;AACEC,MAAAA,IAAI,EAAEF,CAAC,CAACG,QADV;AAEEC,MAAAA,MAAM,EAAEJ,CAAC,CAACK,OAFZ;AAGEC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,GAAG,EAAER,CAAC,CAACS,OADC;AAERC,UAAAA,GAAG,EAAEV,CAAC,CAACW;AAFC;AADF;AAHZ,KADF;AAYD,GAbD;AAcA,SAAOf,MAAP;AACD;;AAGD,SAASgB,QAAT,CAAkBjB,GAAlB,EAAuB;AACrB,MAAIkB,KAAK,GAAG,EAAZ;AACAC,EAAAA,WAAW,CAACC,WAAZ,CAAwBhB,GAAxB,CAA4B,UAAAC,CAAC,EAAI;AAC/Ba,IAAAA,KAAK,CAACZ,IAAN,CAAWD,CAAX;AACD,GAFD;AAGA,SAAOa,KAAP;AACD;;AAED,SAASG,QAAT,CAAkBrB,GAAlB,EAAuB;AACrB,MAAIsB,QAAQ,GAAG,EAAf;AACAC,EAAAA,KAAK,CAACC,KAAN,CAAYpB,GAAZ,CAAgB,UAAAC,CAAC,EAAI;AACnBiB,IAAAA,QAAQ,CAAChB,IAAT,CAAcD,CAAd;AACD,GAFD;AAGAoB,EAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,SAAOA,QAAP;AACD;;AAED3B,GAAG,CAACgC,GAAJ,CAAQ,iCAAR,EAA2C,UAAC3B,GAAD,EAAM4B,GAAN;AAAA,SAAcA,GAAG,CAACC,IAAJ,CAAS9B,YAAY,CAACC,GAAD,CAArB,CAAd;AAAA,CAA3C;AACAL,GAAG,CAACgC,GAAJ,CAAQ,iCAAR,EAA2C,UAAC3B,GAAD,EAAM4B,GAAN;AAAA,SAAcA,GAAG,CAACC,IAAJ,CAASZ,QAAQ,CAACjB,GAAD,CAAjB,CAAd;AAAA,CAA3C;AACAL,GAAG,CAACgC,GAAJ,CAAQ,8BAAR,EAAwC,UAAC3B,GAAD,EAAM4B,GAAN;AAAA,SAAcA,GAAG,CAACC,IAAJ,CAASR,QAAQ,CAACrB,GAAD,CAAjB,CAAd;AAAA,CAAxC;AAEAL,GAAG,CAACmC,MAAJ,CAAWC,OAAO,CAACC,GAAR,CAAYC,IAAvB",
      "sourceRoot": "/Users/claypalumbo/Desktop/code/react-interview/backend",
      "sourcesContent": [
        "import express from 'express';\nrequire('dotenv').config({ path: '.env' });\nconst app = express();\n\nconst fs = require('fs');\nconst csv = require('csvtojson');\nconst request = require('request');\n\nimport * as locations from \"../data/stores.json\";\nimport * as earthquakes from \"../data/earthquake.json\";\nimport * as loans from \"../data/loans.json\";\n\nfunction getLocations(req) {\n  var stores = []\n\n  locations.Stores.map(x => {\n    stores.push(\n      {\n        name: x.lct_name,\n        number: x.lct_nbr,\n        geometry: {\n          location: {\n            lat: x.ltd_msr,\n            lng: x.lng_msr\n          }\n        }\n      },\n    )\n  })\n  return stores\n}\n\n\nfunction getEarth(req) {\n  var quake = []\n  earthquakes.Earthquakes.map(x => {\n    quake.push(x)\n  })\n  return quake\n}\n\nfunction getLoans(req) { \n  var allLoans = []\n  loans.Loans.map(x => {\n    allLoans.push(x) \n  })\n  console.log(allLoans)\n  return allLoans\n}\n\napp.get('/react-interview/getLowesStores', (req, res) => res.send(getLocations(req)));\napp.get('/react-interview/getEarthQuakes', (req, res) => res.send(getEarth(req)));\napp.get('/react-interview/getLoanData', (req, res) => res.send(getLoans(req)));\n\napp.listen(process.env.PORT);\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1570240546000
  }
}